# Run a make target in a Python project.
name: python-make-target

on:
  workflow_call:
    inputs:
      target:
        description: "The make target to run. For example, `test` or `lint`."
        required: true
        type: string
      python-version:
        type: string
        required: false
        default: "3.11"
      poetry-version:
        type: string
        required: false
        default: "1.8.2"
      runs-on:
        type: string
        required: false
        default: "ubuntu-22.04"

jobs:
  run:
    runs-on: ${{ github.event.inputs.runs-on }}
    steps:
      - name: get code
        uses: actions/checkout@v4
      # `poetry` is installed in ~/.local, so we cache it to speed up the action. Without the cache, it usually takes
      # 15-20 seconds to install poetry. With the cache, it takes 1-3 seconds.
      - name: cache poetry cli
        uses: actions/cache@v4
        with:
          path: ~/.local
          # Invalidate the cache when this workflow file changes.
          key: poetry-${{ runner.os }}-${{ github.event.inputs.poetry-version }}-${{ github.event.inputs.python-version }}
      - name: install python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ github.event.inputs.python-version }}
      - name: install poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ github.event.inputs.poetry-version }}
      - name: cache dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: py-${{ github.event.inputs.target }}-${{ runner.os }}-${{ github.event.inputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            py-${{ github.event.inputs.target }}-${{ runner.os }}-${{ github.event.inputs.python-version }}
      - name: ${{ github.event.inputs.target }}
        run: |
          make ${{ github.event.inputs.target }}
